{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Head\\\\Desktop\\\\React JS\\\\dev-challenge-template-master\\\\kimchechallenge\\\\src\\\\index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloClient, InMemoryCache, gql, useQuery } from \"@apollo/client\"; // import Flags from \"country-flag-icons/react/3x2\";\n\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport { Row, Col, Button, Card } from \"reactstrap\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Grid, Paper } from '@material-ui/core'; // initialize a GraphQL client\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  uri: \"https://countries.trevorblades.com\"\n}); // write a GraphQL query that asks for names and codes for all countries\n// const LIST_COUNTRIES = gql`\n//   {\n//     countries {\n//       name\n//       code\n//       native\n//       capital\n//       emoji\n//       currency\n//       languages {\n//         code\n//         name\n//       }\n//     }\n//   }\n// `;\n// interface Country {\n//   name: string;\n//   code: string;\n//   capital: string;\n//   continent: {\n//     name: string;\n//   };\n// }\n// interface CountryData {\n//   countries: Country[];\n// }\n// const [CountryVariable] = useState({\n//   code: \"\"\n// })\n// const COUNTRIES_QUERY = gql`\n//   query Counties($code: String) {\n//     countries(filter: { continent: { eq: $code } }) {\n//       name\n//       code\n//       capital\n//       continent {\n//         name\n//       }\n//     }\n//   }\n// `;\n// const COUNTRIES_QUERY = gql`\n//   query Countries {\n//     countries {\n//       name\n//       code\n//       capital\n//       continent {\n//         name\n//         code\n//       }\n//     }\n//   }\n// `;\n// const COUNTRIES_QUERY = gql`\n// query Counties($code: String) {\n//   countries(filter: { continent: { eq: $code } }) {\n//     name\n//     code\n//     capital\n//     continent {\n//       name\n//       code\n//     }\n//   }\n// }\n// `;\n\nconst CountryList = () => {\n  // const [conti, setConti] = useState(\"EU\");\n  const [continentCode, setContinentCode] = useState(\"\");\n  const [cont, setCont] = useState(\"1\");\n  const COUNTRIES_QUERY = gql`\n    query Counties {\n      countries {\n        name\n        code\n        capital\n        currency\n        continent {\n          name\n          code\n        }\n      }\n    }\n  `;\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(COUNTRIES_QUERY, {\n    client,\n    variables: {\n      code: continentCode\n    }\n  });\n\n  function capital(string) {\n    var gg = \"\";\n    gg = console.log(string.charAt(0).toUpperCase() + string.slice(1).toLowerCase());\n    return gg;\n  }\n\n  const [approvalVariable, setApprovalVariable] = useState(\"\"); // var filteredData = \"\";\n\n  const changeSearch = valor => {\n    setCont(valor);\n  };\n\n  useEffect(() => {\n    capital(approvalVariable);\n  }, [setApprovalVariable, approvalVariable]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  const {\n    countries\n  } = data;\n  let filteredData = countries.filter(x => String(x.name).includes(approvalVariable));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: 20,\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }\n  }, \"Some random text \", \"\\n\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    style: {\n      fontSize: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    style: {\n      borderRadius: 5\n    },\n    value: approvalVariable,\n    onChange: event => {\n      setApprovalVariable(event.target.value);\n      console.log(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }), \"  \", /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn btn-outline-secondary\",\n    type: \"button\",\n    id: \"button-addon2\",\n    style: {\n      borderRadius: 5\n    },\n    onClick: () => {\n      let gg = capital(approvalVariable);\n      setApprovalVariable(gg);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, \"Button\")))), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      flexDirection: \"row\",\n      alignSelf: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 11\n    }\n  }, \"Group by\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"text\",\n    onClick: () => setCont(\"1\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, \"Continent\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"buttton\",\n    color: \"primary\",\n    onClick: () => setCont(\"0\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, \"Language\"))), cont === \"1\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 24\n    }\n  }, countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code === \"AN\").slice(0, 1).map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: c.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 22\n    }\n  }, \"Antarctica\")))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code.includes(\"AN\")).map((c, i) =>\n  /*#__PURE__*/\n  // <div key={c.code}>{c.name}</div>\n  // <h1>By continent</h1>   \n  React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    sm: 5,\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: \"yellowPaper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: 'black',\n      borderRadius: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, c.name), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  }, \"Capital: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  }, c.capital)), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 21\n    }\n  }, \"Currency: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 21\n    }\n  }, c.currency))))))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code === \"AS\").slice(0, 1).map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: c.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  }, \"Asia\"))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code.includes(\"AS\")).map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: c.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 28\n    }\n  }, c.name)), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code === \"EU\").slice(0, 1).map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: c.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }, \"Europe\"))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code.includes(\"EU\")).map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: c.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 28\n    }\n  }, c.name)), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code === \"NA\").slice(0, 1).map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: c.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 17\n    }\n  }, \"North America\"))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code.includes(\"NA\")).map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: c.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 28\n    }\n  }, c.name)), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code === \"OC\").slice(0, 1).map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: c.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 17\n    }\n  }, \"Oceania\"))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code.includes(\"OC\")).map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: c.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 28\n    }\n  }, c.name)), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code === \"SA\").slice(0, 1).map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: c.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 17\n    }\n  }, \"South America\"))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code.includes(\"SA\")).map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: c.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 28\n    }\n  }, c.name))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 3\n    }\n  }, \"By language\")), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(CountryList, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 344,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/Users/Head/Desktop/React JS/dev-challenge-template-master/kimchechallenge/src/index.js"],"names":["React","useEffect","useState","ReactDOM","ApolloClient","InMemoryCache","gql","useQuery","Header","Footer","Row","Col","Button","Card","SearchIcon","Grid","Paper","client","cache","uri","CountryList","continentCode","setContinentCode","cont","setCont","COUNTRIES_QUERY","data","loading","error","variables","code","capital","string","gg","console","log","charAt","toUpperCase","slice","toLowerCase","approvalVariable","setApprovalVariable","changeSearch","valor","countries","filteredData","filter","x","String","name","includes","marginTop","marginBottom","fontSize","borderRadius","event","target","value","flexDirection","alignSelf","length","conti","continent","map","c","i","padding","backgroundColor","currency","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloClient, InMemoryCache, gql, useQuery } from \"@apollo/client\";\n// import Flags from \"country-flag-icons/react/3x2\";\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport { Row, Col, Button, Card } from \"reactstrap\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Grid, Paper } from '@material-ui/core';\n// initialize a GraphQL client\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  uri: \"https://countries.trevorblades.com\",\n});\n\n// write a GraphQL query that asks for names and codes for all countries\n// const LIST_COUNTRIES = gql`\n//   {\n//     countries {\n//       name\n//       code\n//       native\n//       capital\n//       emoji\n//       currency\n//       languages {\n//         code\n//         name\n//       }\n//     }\n//   }\n// `;\n\n// interface Country {\n//   name: string;\n//   code: string;\n//   capital: string;\n//   continent: {\n//     name: string;\n//   };\n// }\n\n// interface CountryData {\n//   countries: Country[];\n// }\n\n// const [CountryVariable] = useState({\n//   code: \"\"\n// })\n\n// const COUNTRIES_QUERY = gql`\n//   query Counties($code: String) {\n//     countries(filter: { continent: { eq: $code } }) {\n//       name\n//       code\n//       capital\n//       continent {\n//         name\n//       }\n//     }\n//   }\n// `;\n\n// const COUNTRIES_QUERY = gql`\n//   query Countries {\n//     countries {\n//       name\n//       code\n//       capital\n//       continent {\n//         name\n//         code\n//       }\n//     }\n//   }\n// `;\n\n// const COUNTRIES_QUERY = gql`\n// query Counties($code: String) {\n//   countries(filter: { continent: { eq: $code } }) {\n//     name\n//     code\n//     capital\n//     continent {\n//       name\n//       code\n//     }\n//   }\n// }\n// `;\n\nconst CountryList = () => {\n  // const [conti, setConti] = useState(\"EU\");\n  const [continentCode, setContinentCode] = useState(\"\");\n  const [cont, setCont] = useState(\"1\");\n\n  const COUNTRIES_QUERY = gql`\n    query Counties {\n      countries {\n        name\n        code\n        capital\n        currency\n        continent {\n          name\n          code\n        }\n      }\n    }\n  `;\n\n  const { data, loading, error } = useQuery(COUNTRIES_QUERY, {\n    client,\n    variables: {\n      code: continentCode,\n    },\n  });\n\n  function capital(string) {\n    var gg = \"\";\n    gg = console.log(\n      string.charAt(0).toUpperCase() + string.slice(1).toLowerCase()\n    );\n    return gg;\n  }\n\n  const [approvalVariable, setApprovalVariable] = useState(\"\");\n\n  // var filteredData = \"\";\n\n  const changeSearch = (valor) => {\n    setCont(valor)\n  };\n\n  useEffect(() => {\n    capital(approvalVariable)\n    }, [setApprovalVariable, approvalVariable]);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  const { countries } = data;\n\n  let filteredData = countries.filter((x) =>\n  String(x.name).includes(approvalVariable)\n);\n\n\n  return (\n    <>\n      <Header></Header>\n\n      <Row style={{ marginTop: 20, marginBottom: 20 }}>\n        <Col>\n          <h3>Some random text {\"\\n\"}</h3>\n          <div>\n            <SearchIcon style={{ fontSize: 20 }} />\n            <input\n              type=\"text\"\n              style={{ borderRadius: 5 }}\n              value={approvalVariable}\n              onChange={(event) => {\n                setApprovalVariable(event.target.value);\n                console.log(event.target.value);\n              }}\n            />\n            {\"  \"}\n            <button\n              class=\"btn btn-outline-secondary\"\n              type=\"button\"\n              id=\"button-addon2\"\n              style={{ borderRadius: 5 }}\n              onClick={() => {\n                let gg = capital(approvalVariable);\n                setApprovalVariable(gg);\n              }}\n            >\n              Button\n            </button>\n          </div>\n        </Col>\n      </Row>\n\n      <Card>\n        <Row style={{ flexDirection: \"row\", alignSelf: \"auto\" }}>\n          <h2>Group by</h2>\n\n          <Button variant=\"text\" onClick={() => setCont(\"1\")}>Continent</Button>\n          <Button type=\"buttton\" color=\"primary\" onClick={() => setCont(\"0\")}>\n            Language\n          </Button>\n        </Row>\n      </Card>\n \n      {/* ========== ANTARCTICA ========== */}\n      {\n        cont === \"1\" ? <div>\n\n      {countries.length === 0\n        ? null\n        : filteredData\n            .filter((conti) => conti.continent.code === \"AN\")\n            .slice(0, 1)\n            .map((c, i) => (\n              <div key={c.code}>\n                <h1> <li>Antarctica</li></h1>\n              </div>\n            ))}\n\n      {countries.length === 0\n        ? null\n        : filteredData\n            .filter((conti) => conti.continent.code.includes(\"AN\"))\n            .map((c, i) => \n            // <div key={c.code}>{c.name}</div>\n            // <h1>By continent</h1>   \n          <Grid item xs={10} sm={5}  style={{padding: 10}}>\n        <Paper className=\"yellowPaper\">\n          <div style={{backgroundColor: 'black', borderRadius: 5,}}>\n            <h3  style={{padding: 10}}>{ c.name }</h3>\n            <ul>\n                <li>\n                    <strong>Capital: </strong>\n                    <span>{ c.capital }</span>\n                </li>\n                <li>\n                    <strong>Currency: </strong>\n                    <span>{ c.currency }</span>\n                </li>\n\n            </ul>\n            </div>\n        </Paper>\n    </Grid>   \n            )\n            }\n\n      {/* ==================== */}\n\n      {countries.length === 0\n        ? null\n        : filteredData\n            .filter((conti) => conti.continent.code === \"AS\")\n            .slice(0, 1)\n            .map((c, i) => (\n              <div key={c.code}>\n                <h1>Asia</h1>\n              </div>\n            ))}\n\n      {countries.length === 0\n        ? null\n        : filteredData\n            .filter((conti) => conti.continent.code.includes(\"AS\"))\n            .map((c, i) => <div key={c.code}>{c.name}</div>)}\n\n      {/* ==================== */}\n\n      {countries.length === 0\n        ? null\n        : filteredData\n            .filter((conti) => conti.continent.code === \"EU\")\n            .slice(0, 1)\n            .map((c, i) => (\n              <div key={c.code}>\n                <h1>Europe</h1>\n              </div>\n            ))}\n\n      {countries.length === 0\n        ? null\n        : filteredData\n            .filter((conti) => conti.continent.code.includes(\"EU\"))\n            .map((c, i) => <div key={c.code}>{c.name}</div>)}\n\n      {/* ==================== */}\n\n      {countries.length === 0\n        ? null\n        : filteredData\n            .filter((conti) => conti.continent.code === \"NA\")\n            .slice(0, 1)\n            .map((c, i) => (\n              <div key={c.code}>\n                <h1>North America</h1>\n              </div>\n            ))}\n\n      {countries.length === 0\n        ? null\n        : filteredData\n            .filter((conti) => conti.continent.code.includes(\"NA\"))\n            .map((c, i) => <div key={c.code}>{c.name}</div>)}\n\n      {/* ==================== */}\n\n      {countries.length === 0\n        ? null\n        : filteredData\n            .filter((conti) => conti.continent.code === \"OC\")\n            .slice(0, 1)\n            .map((c, i) => (\n              <div key={c.code}>\n                <h1>Oceania</h1>\n              </div>\n            ))}\n\n      {countries.length === 0\n        ? null\n        : filteredData\n            .filter((conti) => conti.continent.code.includes(\"OC\"))\n            .map((c, i) => <div key={c.code}>{c.name}</div>)}\n\n      {/* ==================== */}\n\n      {countries.length === 0\n        ? null\n        : filteredData\n            .filter((conti) => conti.continent.code === \"SA\")\n            .slice(0, 1)\n            .map((c, i) => (\n              <div key={c.code}>\n                <h1>South America</h1>\n              </div>\n            ))}\n\n      {countries.length === 0\n        ? null\n        : filteredData\n            .filter((conti) => conti.continent.code.includes(\"SA\"))\n            .map((c, i) => <div key={c.code}>{c.name}</div>)}\n</div> : <div>\n  <h1>By language</h1>\n</div>\n}\n\n      <Footer></Footer>\n    </>\n  );\n};\n\nReactDOM.render(<CountryList />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}