{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Head\\\\Desktop\\\\React JS\\\\dev-challenge-template-master\\\\kimchechallenge\\\\src\\\\index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloClient, InMemoryCache, gql, useQuery } from \"@apollo/client\"; // import Flags from \"country-flag-icons/react/3x2\";\n\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport { Row, Col, Button, Card } from \"reactstrap\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Grid, Paper } from \"@material-ui/core\"; // initialize a GraphQL client\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  uri: \"https://countries.trevorblades.com\"\n}); // write a GraphQL query that asks for names and codes for all countries\n// const LIST_COUNTRIES = gql`\n//   {\n//     countries {\n//       name\n//       code\n//       native\n//       capital\n//       emoji\n//       currency\n//       languages {\n//         code\n//         name\n//       }\n//     }\n//   }\n// `;\n// interface Country {\n//   name: string;\n//   code: string;\n//   capital: string;\n//   continent: {\n//     name: string;\n//   };\n// }\n// interface CountryData {\n//   countries: Country[];\n// }\n// const [CountryVariable] = useState({\n//   code: \"\"\n// })\n// const COUNTRIES_QUERY = gql`\n//   query Counties($code: String) {\n//     countries(filter: { continent: { eq: $code } }) {\n//       name\n//       code\n//       capital\n//       continent {\n//         name\n//       }\n//     }\n//   }\n// `;\n// const COUNTRIES_QUERY = gql`\n//   query Countries {\n//     countries {\n//       name\n//       code\n//       capital\n//       continent {\n//         name\n//         code\n//       }\n//     }\n//   }\n// `;\n// const COUNTRIES_QUERY = gql`\n// query Counties($code: String) {\n//   countries(filter: { continent: { eq: $code } }) {\n//     name\n//     code\n//     capital\n//     continent {\n//       name\n//       code\n//     }\n//   }\n// }\n// `;\n\nconst CountryList = () => {\n  // const [conti, setConti] = useState(\"EU\");\n  const [continentCode, setContinentCode] = useState(\"\");\n  const [cont, setCont] = useState(\"1\");\n  const COUNTRIES_QUERY = gql`\n    query Counties {\n      countries {\n        name\n        code\n        capital\n        currency\n        continent {\n          name\n          code\n        }\n        languages {\n          code\n          name\n        }\n      }\n    }\n  `;\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(COUNTRIES_QUERY, {\n    client\n  });\n\n  function capital(string) {\n    var gg = \"\";\n    gg = console.log(string.charAt(0).toUpperCase() + string.slice(1).toLowerCase());\n    return gg;\n  }\n\n  const [approvalVariable, setApprovalVariable] = useState(\"\"); // useEffect(() => {\n  //   capital(approvalVariable);\n  // }, [setApprovalVariable, approvalVariable]);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  const {\n    countries\n  } = data;\n  let filteredData = countries.filter(x => String(x.name).includes(approvalVariable));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: 20,\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, \"Some random text \", \"\\n\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    style: {\n      fontSize: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    style: {\n      borderRadius: 5\n    },\n    value: approvalVariable,\n    onChange: event => {\n      setApprovalVariable(event.target.value);\n      console.log(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }), \"  \", /*#__PURE__*/React.createElement(\"button\", {\n    class: \"btn btn-outline-secondary\",\n    type: \"button\",\n    id: \"button-addon2\",\n    style: {\n      borderRadius: 5\n    },\n    onClick: () => {\n      let gg = capital(approvalVariable);\n      setApprovalVariable(gg);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }, \"Button\")))), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    style: {\n      flexDirection: \"row\",\n      alignSelf: \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, \"Group by\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"text\",\n    onClick: () => setCont(\"1\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 11\n    }\n  }, \"Continent\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"buttton\",\n    color: \"primary\",\n    onClick: () => setCont(\"0\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, \"Language\"))), cont === \"1\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }\n  }, countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code === \"AN\").slice(0, 1).map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: c.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 23\n    }\n  }, \"Antarctica\")))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code.includes(\"AN\")).map((c, i) =>\n  /*#__PURE__*/\n  // <div key={c.code}>{c.name}</div>\n  // <h1>By continent</h1>\n  React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    sm: 5,\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"gray\",\n      borderRadius: 7,\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 25\n    }\n  }, c.name), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      padding: 5,\n      marginLeft: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 29\n    }\n  }, \"Capital: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 29\n    }\n  }, c.capital)), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 29\n    }\n  }, \"Currency: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 29\n    }\n  }, c.currency))))))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code === \"AS\").slice(0, 1).map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: c.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 23\n    }\n  }, \"Asia\")))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code.includes(\"AS\")).map((c, i) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    sm: 5,\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"gray\",\n      borderRadius: 7,\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 25\n    }\n  }, c.name), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      padding: 5,\n      marginLeft: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 29\n    }\n  }, \"Capital: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 29\n    }\n  }, c.capital)), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 29\n    }\n  }, \"Currency: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 29\n    }\n  }, c.currency))))))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code === \"EU\").slice(0, 1).map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: c.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 23\n    }\n  }, \"Europe\")))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code.includes(\"EU\")).map((c, i) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    sm: 5,\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"gray\",\n      borderRadius: 7,\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 25\n    }\n  }, c.name), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      padding: 5,\n      marginLeft: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 29\n    }\n  }, \"Capital: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 29\n    }\n  }, c.capital)), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 29\n    }\n  }, \"Currency: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 29\n    }\n  }, c.currency))))))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code === \"NA\").slice(0, 1).map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: c.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 23\n    }\n  }, \"North America\")))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code.includes(\"NA\")).map((c, i) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    sm: 5,\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"gray\",\n      borderRadius: 7,\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 25\n    }\n  }, c.name), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      padding: 5,\n      marginLeft: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 29\n    }\n  }, \"Capital: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 29\n    }\n  }, c.capital)), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 29\n    }\n  }, \"Currency: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 29\n    }\n  }, c.currency))))))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code === \"OC\").slice(0, 1).map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: c.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 23\n    }\n  }, \"Oceania\")))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code.includes(\"OC\")).map((c, i) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    sm: 5,\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"gray\",\n      borderRadius: 7,\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 25\n    }\n  }, c.name), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      padding: 5,\n      marginLeft: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 29\n    }\n  }, \"Capital: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 29\n    }\n  }, c.capital)), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 29\n    }\n  }, \"Currency: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 29\n    }\n  }, c.currency))))))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code === \"SA\").slice(0, 1).map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: c.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 23\n    }\n  }, \"South America\")))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code.includes(\"SA\")).map((c, i) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    sm: 5,\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"gray\",\n      borderRadius: 7,\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 25\n    }\n  }, c.name), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      padding: 5,\n      marginLeft: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 29\n    }\n  }, \"Capital: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 29\n    }\n  }, c.capital)), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 29\n    }\n  }, \"Currency: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 29\n    }\n  }, c.currency)))))))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 11\n    }\n  }, \"By language\"), countries.length === 0 ? null : filteredData.filter(conti => conti.languages.code === \"es\").slice(0, 1).map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 21\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 23\n    }\n  }, \"Afrikaans\")))), countries.length === 0 ? null : filteredData.filter(conti => conti.languages.code.includes(\"es\")).map((c, i) =>\n  /*#__PURE__*/\n  // <div key={c.code}>{c.name}</div>\n  // <h1>By continent</h1>\n  React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    sm: 5,\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"gray\",\n      borderRadius: 7,\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 25\n    }\n  }, c.name), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      padding: 5,\n      marginLeft: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 29\n    }\n  }, \"Capital: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 29\n    }\n  }, c.capital)), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 29\n    }\n  }, \"Currency: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 29\n    }\n  }, c.currency)))))))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(CountryList, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 525,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/Users/Head/Desktop/React JS/dev-challenge-template-master/kimchechallenge/src/index.js"],"names":["React","useEffect","useState","ReactDOM","ApolloClient","InMemoryCache","gql","useQuery","Header","Footer","Row","Col","Button","Card","SearchIcon","Grid","Paper","client","cache","uri","CountryList","continentCode","setContinentCode","cont","setCont","COUNTRIES_QUERY","data","loading","error","capital","string","gg","console","log","charAt","toUpperCase","slice","toLowerCase","approvalVariable","setApprovalVariable","countries","filteredData","filter","x","String","name","includes","marginTop","marginBottom","fontSize","borderRadius","event","target","value","flexDirection","alignSelf","length","conti","continent","code","map","c","i","padding","backgroundColor","color","marginLeft","currency","languages","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloClient, InMemoryCache, gql, useQuery } from \"@apollo/client\";\n// import Flags from \"country-flag-icons/react/3x2\";\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport { Row, Col, Button, Card } from \"reactstrap\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Grid, Paper } from \"@material-ui/core\";\n// initialize a GraphQL client\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  uri: \"https://countries.trevorblades.com\",\n});\n\n// write a GraphQL query that asks for names and codes for all countries\n// const LIST_COUNTRIES = gql`\n//   {\n//     countries {\n//       name\n//       code\n//       native\n//       capital\n//       emoji\n//       currency\n//       languages {\n//         code\n//         name\n//       }\n//     }\n//   }\n// `;\n\n// interface Country {\n//   name: string;\n//   code: string;\n//   capital: string;\n//   continent: {\n//     name: string;\n//   };\n// }\n\n// interface CountryData {\n//   countries: Country[];\n// }\n\n// const [CountryVariable] = useState({\n//   code: \"\"\n// })\n\n// const COUNTRIES_QUERY = gql`\n//   query Counties($code: String) {\n//     countries(filter: { continent: { eq: $code } }) {\n//       name\n//       code\n//       capital\n//       continent {\n//         name\n//       }\n//     }\n//   }\n// `;\n\n// const COUNTRIES_QUERY = gql`\n//   query Countries {\n//     countries {\n//       name\n//       code\n//       capital\n//       continent {\n//         name\n//         code\n//       }\n//     }\n//   }\n// `;\n\n// const COUNTRIES_QUERY = gql`\n// query Counties($code: String) {\n//   countries(filter: { continent: { eq: $code } }) {\n//     name\n//     code\n//     capital\n//     continent {\n//       name\n//       code\n//     }\n//   }\n// }\n// `;\n\nconst CountryList = () => {\n  // const [conti, setConti] = useState(\"EU\");\n  const [continentCode, setContinentCode] = useState(\"\");\n  const [cont, setCont] = useState(\"1\");\n\n  const COUNTRIES_QUERY = gql`\n    query Counties {\n      countries {\n        name\n        code\n        capital\n        currency\n        continent {\n          name\n          code\n        }\n        languages {\n          code\n          name\n        }\n      }\n    }\n  `;\n\n  const { data, loading, error } = useQuery(COUNTRIES_QUERY, {\n    client\n  });\n\n  function capital(string) {\n    var gg = \"\";\n    gg = console.log(\n      string.charAt(0).toUpperCase() + string.slice(1).toLowerCase()\n    );\n    return gg;\n  }\n\n  const [approvalVariable, setApprovalVariable] = useState(\"\");\n\n  // useEffect(() => {\n  //   capital(approvalVariable);\n  // }, [setApprovalVariable, approvalVariable]);\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  const { countries } = data;\n\n  let filteredData = countries.filter((x) =>\n    String(x.name).includes(approvalVariable)\n  );\n\n  return (\n    <>\n      <Header></Header>\n\n      <Row style={{ marginTop: 20, marginBottom: 20 }}>\n        <Col>\n          <h3>Some random text {\"\\n\"}</h3>\n          <div>\n            <SearchIcon style={{ fontSize: 20 }} />\n            <input\n              type=\"text\"\n              style={{ borderRadius: 5 }}\n              value={approvalVariable}\n              onChange={(event) => {\n                setApprovalVariable(event.target.value);\n                console.log(event.target.value);\n              }}\n            />\n            {\"  \"}\n            <button\n              class=\"btn btn-outline-secondary\"\n              type=\"button\"\n              id=\"button-addon2\"\n              style={{ borderRadius: 5 }}\n              onClick={() => {\n                let gg = capital(approvalVariable);\n                setApprovalVariable(gg);\n              }}\n            >\n              Button\n            </button>\n          </div>\n        </Col>\n      </Row>\n\n      <Card>\n        <Row style={{ flexDirection: \"row\", alignSelf: \"auto\" }}>\n          <h2>Group by</h2>\n\n          <Button variant=\"text\" onClick={() => setCont(\"1\")}>\n            Continent\n          </Button>\n          <Button type=\"buttton\" color=\"primary\" onClick={() => setCont(\"0\")}>\n            Language\n          </Button>\n        </Row>\n      </Card>\n\n      {/* ========== ANTARCTICA ========== */}\n      {cont === \"1\" ? (\n        <div>\n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.continent.code === \"AN\")\n                .slice(0, 1)\n                .map((c, i) => (\n                  <div key={c.code}>\n                    <h1>\n                      {\" \"}\n                      <li>Antarctica</li>\n                    </h1>\n                  </div>\n                ))}\n\n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.continent.code.includes(\"AN\"))\n                .map((c, i) => (\n                  // <div key={c.code}>{c.name}</div>\n                  // <h1>By continent</h1>\n                  <Grid item xs={10} sm={5} style={{ padding: 10 }}>\n                    <Paper>\n                      <div\n                        style={{\n                          backgroundColor: \"gray\",\n                          borderRadius: 7,\n                          color: \"white\",\n                        }}\n                      >\n                        <h3 style={{ padding: 10 }}>{c.name}</h3>\n                        <ul style={{ padding: 5, marginLeft: 20 }}>\n                          <li>\n                            <strong>Capital: </strong>\n                            <span>{c.capital}</span>\n                          </li>\n                          <li>\n                            <strong>Currency: </strong>\n                            <span>{c.currency}</span>\n                          </li>\n                        </ul>\n                      </div>\n                    </Paper>\n                  </Grid>\n                ))}\n\n          {/* ==================== */}\n\n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.continent.code === \"AS\")\n                .slice(0, 1)\n                .map((c, i) => (\n                  <div key={c.code}>\n                    <h1>\n                      <li>Asia</li>\n                    </h1>\n                  </div>\n                ))}\n\n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.continent.code.includes(\"AS\"))\n                .map((c, i) => (\n                  <Grid item xs={10} sm={5} style={{ padding: 10 }}>\n                    <Paper>\n                      <div\n                        style={{\n                          backgroundColor: \"gray\",\n                          borderRadius: 7,\n                          color: \"white\",\n                        }}\n                      >\n                        <h3 style={{ padding: 10 }}>{c.name}</h3>\n                        <ul style={{ padding: 5, marginLeft: 20 }}>\n                          <li>\n                            <strong>Capital: </strong>\n                            <span>{c.capital}</span>\n                          </li>\n                          <li>\n                            <strong>Currency: </strong>\n                            <span>{c.currency}</span>\n                          </li>\n                        </ul>\n                      </div>\n                    </Paper>\n                  </Grid>\n                ))}\n\n          {/* ==================== */}\n\n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.continent.code === \"EU\")\n                .slice(0, 1)\n                .map((c, i) => (\n                  <div key={c.code}>\n                    <h1>\n                      <li>Europe</li>\n                    </h1>\n                  </div>\n                ))}\n\n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.continent.code.includes(\"EU\"))\n                .map((c, i) => (\n                  <Grid item xs={10} sm={5} style={{ padding: 10 }}>\n                    <Paper>\n                      <div\n                        style={{\n                          backgroundColor: \"gray\",\n                          borderRadius: 7,\n                          color: \"white\",\n                        }}\n                      >\n                        <h3 style={{ padding: 10 }}>{c.name}</h3>\n                        <ul style={{ padding: 5, marginLeft: 20 }}>\n                          <li>\n                            <strong>Capital: </strong>\n                            <span>{c.capital}</span>\n                          </li>\n                          <li>\n                            <strong>Currency: </strong>\n                            <span>{c.currency}</span>\n                          </li>\n                        </ul>\n                      </div>\n                    </Paper>\n                  </Grid>\n                ))}\n\n          {/* ==================== */}\n\n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.continent.code === \"NA\")\n                .slice(0, 1)\n                .map((c, i) => (\n                  <div key={c.code}>\n                    <h1>\n                      <li>North America</li>\n                    </h1>\n                  </div>\n                ))}\n\n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.continent.code.includes(\"NA\"))\n                .map((c, i) => (\n                  <Grid item xs={10} sm={5} style={{ padding: 10 }}>\n                    <Paper>\n                      <div\n                        style={{\n                          backgroundColor: \"gray\",\n                          borderRadius: 7,\n                          color: \"white\",\n                        }}\n                      >\n                        <h3 style={{ padding: 10 }}>{c.name}</h3>\n                        <ul style={{ padding: 5, marginLeft: 20 }}>\n                          <li>\n                            <strong>Capital: </strong>\n                            <span>{c.capital}</span>\n                          </li>\n                          <li>\n                            <strong>Currency: </strong>\n                            <span>{c.currency}</span>\n                          </li>\n                        </ul>\n                      </div>\n                    </Paper>\n                  </Grid>\n                ))}\n\n          {/* ==================== */}\n\n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.continent.code === \"OC\")\n                .slice(0, 1)\n                .map((c, i) => (\n                  <div key={c.code}>\n                    <h1>\n                      <li>Oceania</li>\n                    </h1>\n                  </div>\n                ))}\n\n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.continent.code.includes(\"OC\"))\n                .map((c, i) => (\n                  <Grid item xs={10} sm={5} style={{ padding: 10 }}>\n                    <Paper>\n                      <div\n                        style={{\n                          backgroundColor: \"gray\",\n                          borderRadius: 7,\n                          color: \"white\",\n                        }}\n                      >\n                        <h3 style={{ padding: 10 }}>{c.name}</h3>\n                        <ul style={{ padding: 5, marginLeft: 20 }}>\n                          <li>\n                            <strong>Capital: </strong>\n                            <span>{c.capital}</span>\n                          </li>\n                          <li>\n                            <strong>Currency: </strong>\n                            <span>{c.currency}</span>\n                          </li>\n                        </ul>\n                      </div>\n                    </Paper>\n                  </Grid>\n                ))}\n\n          {/* ==================== */}\n\n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.continent.code === \"SA\")\n                .slice(0, 1)\n                .map((c, i) => (\n                  <div key={c.code}>\n                    <h1>\n                      <li>South America</li>\n                    </h1>\n                  </div>\n                ))}\n\n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.continent.code.includes(\"SA\"))\n                .map((c, i) => (\n                  <Grid item xs={10} sm={5} style={{ padding: 10 }}>\n                    <Paper>\n                      <div\n                        style={{\n                          backgroundColor: \"gray\",\n                          borderRadius: 7,\n                          color: \"white\",\n                        }}\n                      >\n                        <h3 style={{ padding: 10 }}>{c.name}</h3>\n                        <ul style={{ padding: 5, marginLeft: 20 }}>\n                          <li>\n                            <strong>Capital: </strong>\n                            <span>{c.capital}</span>\n                          </li>\n                          <li>\n                            <strong>Currency: </strong>\n                            <span>{c.currency}</span>\n                          </li>\n                        </ul>\n                      </div>\n                    </Paper>\n                  </Grid>\n                ))}\n        </div>\n      ) : (\n        <div>\n          <h1>By language</h1>\n           {/* ========== ANTARCTICA ========== */}\n    \n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.languages.code === \"es\")\n                .slice(0, 1)\n                .map((c, i) => (\n                  <div>\n                    <h1>\n                      {\" \"}\n                      <li>Afrikaans</li>\n                    </h1>\n                  </div>\n                ))}\n\n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.languages.code.includes(\"es\"))\n                .map((c, i) => (\n                  // <div key={c.code}>{c.name}</div>\n                  // <h1>By continent</h1>\n                  <Grid item xs={10} sm={5} style={{ padding: 10 }}>\n                    <Paper>\n                      <div\n                        style={{\n                          backgroundColor: \"gray\",\n                          borderRadius: 7,\n                          color: \"white\",\n                        }}\n                      >\n                        <h3 style={{ padding: 10 }}>{c.name}</h3>\n                        <ul style={{ padding: 5, marginLeft: 20 }}>\n                          <li>\n                            <strong>Capital: </strong>\n                            <span>{c.capital}</span>\n                          </li>\n                          <li>\n                            <strong>Currency: </strong>\n                            <span>{c.currency}</span>\n                          </li>\n                        </ul>\n                      </div>\n                    </Paper>\n                  </Grid>\n                ))}\n        </div>\n      )}\n\n      <Footer></Footer>\n    </>\n  );\n};\n\nReactDOM.render(<CountryList />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}