{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Head\\\\Desktop\\\\React JS\\\\dev-challenge-template-master\\\\kimchechallenge\\\\src\\\\index.js\";\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloClient, InMemoryCache, useQuery } from \"@apollo/client\";\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport { COUNTRIES_QUERY } from \"./graphql/queries\";\nimport { Button } from \"@material-ui/core\";\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  uri: \"https://countries.trevorblades.com\"\n});\n\nconst CountryList = () => {\n  const {\n    data,\n    loading\n  } = useQuery(COUNTRIES_QUERY, {\n    client\n  }); // # Capitalizar el input\n  // function capital(string) {\n  //   var capitalize = \"\";\n  //   capitalize = console.log(\n  //     string.charAt(0).toUpperCase() + string.slice(1).toLowerCase()\n  //   );\n  //   return capitalize;\n  // }\n\n  const [approvalVariable, setApprovalVariable] = useState(\"\");\n  const [cont, setCont] = useState(\"1\");\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  const {\n    countries\n  } = data;\n  let filteredData = countries.filter(x => String(x.name).includes(approvalVariable));\n\n  const setColor = () => {\n    if (cont === \"1\") return \"primary\";else return \"\";\n  };\n\n  const setColorDis = () => {\n    if (cont === \"0\") return \"primary\";else return \"\";\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Some random text \", \"\\n\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    style: {\n      fontSize: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    style: {\n      borderRadius: 5\n    },\n    value: approvalVariable,\n    onChange: event => {\n      setApprovalVariable(event.target.value);\n      console.log(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    font: \"italic\",\n    style: {\n      font: \"italic\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \" \", \"Enter the first letter in uppercase and the rest in lowercase\")), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Group by:\", \" \", /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: setColor(),\n    onClick: () => {\n      setCont(\"1\");\n      setColor(\"0\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Continent\"), \"  \", /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: setColorDis(),\n    onClick: () => setCont(\"0\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Language\"))), cont === \"1\" ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, \"By continent\"), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code === \"AN\").slice(0, 1).map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: c.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 23\n    }\n  }, \"Antarctica\")))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code.includes(\"AN\")).map((c, i) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    sm: 5,\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"gray\",\n      borderRadius: 7,\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 25\n    }\n  }, c.name), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      padding: 5,\n      marginLeft: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, \"Capital: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 29\n    }\n  }, c.capital)), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  }, \"Currency: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  }, c.currency))))))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code === \"AS\").slice(0, 1).map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: c.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 23\n    }\n  }, \"Asia\")))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code.includes(\"AS\")).map((c, i) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    sm: 5,\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"gray\",\n      borderRadius: 7,\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 25\n    }\n  }, c.name), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      padding: 5,\n      marginLeft: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  }, \"Capital: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 29\n    }\n  }, c.capital)), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 29\n    }\n  }, \"Currency: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 29\n    }\n  }, c.currency))))))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code === \"EU\").slice(0, 1).map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: c.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 23\n    }\n  }, \"Europe\")))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code.includes(\"EU\")).map((c, i) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    sm: 5,\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"gray\",\n      borderRadius: 7,\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  }, c.name), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      padding: 5,\n      marginLeft: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 29\n    }\n  }, \"Capital: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 29\n    }\n  }, c.capital)), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 29\n    }\n  }, \"Currency: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 29\n    }\n  }, c.currency))))))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code === \"NA\").slice(0, 1).map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: c.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 23\n    }\n  }, \"North America\")))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code.includes(\"NA\")).map((c, i) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    sm: 5,\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"gray\",\n      borderRadius: 7,\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 25\n    }\n  }, c.name), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      padding: 5,\n      marginLeft: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 29\n    }\n  }, \"Capital: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 29\n    }\n  }, c.capital)), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 29\n    }\n  }, \"Currency: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 29\n    }\n  }, c.currency))))))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code === \"OC\").slice(0, 1).map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: c.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 23\n    }\n  }, \"Oceania\")))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code.includes(\"OC\")).map((c, i) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    sm: 5,\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"gray\",\n      borderRadius: 7,\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 25\n    }\n  }, c.name), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      padding: 5,\n      marginLeft: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 29\n    }\n  }, \"Capital: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 29\n    }\n  }, c.capital)), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 29\n    }\n  }, \"Currency: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 29\n    }\n  }, c.currency))))))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code === \"SA\").slice(0, 1).map((c, i) => /*#__PURE__*/React.createElement(\"div\", {\n    key: c.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 23\n    }\n  }, \"South America\")))), countries.length === 0 ? null : filteredData.filter(conti => conti.continent.code.includes(\"SA\")).map((c, i) => /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 10,\n    sm: 5,\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: \"gray\",\n      borderRadius: 7,\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      padding: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 25\n    }\n  }, c.name), /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      padding: 5,\n      marginLeft: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 29\n    }\n  }, \"Capital: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 29\n    }\n  }, c.capital)), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 29\n    }\n  }, \"Currency: \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 29\n    }\n  }, c.currency)))))))) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 11\n    }\n  }, \"By language\")), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(CountryList, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 385,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/Users/Head/Desktop/React JS/dev-challenge-template-master/kimchechallenge/src/index.js"],"names":["React","useState","ReactDOM","ApolloClient","InMemoryCache","useQuery","Header","Footer","SearchIcon","Grid","Paper","COUNTRIES_QUERY","Button","client","cache","uri","CountryList","data","loading","approvalVariable","setApprovalVariable","cont","setCont","countries","filteredData","filter","x","String","name","includes","setColor","setColorDis","fontSize","borderRadius","event","target","value","console","log","font","length","conti","continent","code","slice","map","c","i","padding","backgroundColor","color","marginLeft","capital","currency","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloClient, InMemoryCache, useQuery } from \"@apollo/client\";\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport { COUNTRIES_QUERY } from \"./graphql/queries\";\nimport { Button } from \"@material-ui/core\";\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  uri: \"https://countries.trevorblades.com\",\n});\n\nconst CountryList = () => {\n\n  const { data, loading } = useQuery(COUNTRIES_QUERY, {\n    client,\n  }); \n\n  // # Capitalizar el input\n  // function capital(string) {\n  //   var capitalize = \"\";\n  //   capitalize = console.log(\n  //     string.charAt(0).toUpperCase() + string.slice(1).toLowerCase()\n  //   );\n  //   return capitalize;\n  // }\n\n  const [approvalVariable, setApprovalVariable] = useState(\"\");\n  const [cont, setCont] = useState(\"1\");\n\n  if (loading) {\n    return <p>Loading...</p>;\n  }\n\n  const { countries } = data;\n\n  let filteredData = countries.filter((x) =>\n    String(x.name).includes(approvalVariable)\n  );\n\n  const setColor = () => {\n    if (cont === \"1\") return \"primary\";\n    else return \"\";\n  };\n\n  const setColorDis = () => {\n    if (cont === \"0\") return \"primary\";\n    else return \"\";\n  };\n\n  return (\n    <>\n      <Header></Header>\n\n      <h3>Some random text {\"\\n\"}</h3>\n      <div>\n        <SearchIcon style={{ fontSize: 20 }} />\n        <input\n          type=\"text\"\n          style={{ borderRadius: 5 }}\n          value={approvalVariable}\n          onChange={(event) => {\n            setApprovalVariable(event.target.value);\n            console.log(event.target.value);\n          }}\n        />\n        <span font=\"italic\" style={{ font: \"italic\" }}>\n          {\" \"}\n          Enter the first letter in uppercase and the rest in lowercase\n        </span>\n      </div>\n\n      <div>\n        <h2>\n          Group by:{\" \"}\n          <Button\n            variant=\"contained\"\n            color={setColor()}\n            onClick={() => {\n              setCont(\"1\");\n              setColor(\"0\");\n            }}\n          >\n            Continent\n          </Button>\n          {\"  \"}\n          <Button\n            variant=\"contained\"\n            color={setColorDis()}\n            onClick={() => setCont(\"0\")}\n          >\n            Language\n          </Button>\n        </h2>\n      </div>\n\n      {/* ========== Search by continent ========== */}\n      {cont === \"1\" ? (\n        <div>\n          <h1>By continent</h1>\n\n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.continent.code === \"AN\")\n                .slice(0, 1)\n                .map((c, i) => (\n                  <div key={c.code}>\n                    <h2>\n                      {\" \"}\n                      <li>Antarctica</li>\n                    </h2>\n                  </div>\n                ))}\n\n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.continent.code.includes(\"AN\"))\n                .map((c, i) => (\n                  <Grid item xs={10} sm={5} style={{ padding: 10 }}>\n                    <Paper>\n                      <div\n                        style={{\n                          backgroundColor: \"gray\",\n                          borderRadius: 7,\n                          color: \"white\",\n                        }}\n                      >\n                        <h3 style={{ padding: 10 }}>{c.name}</h3>\n                        <ul style={{ padding: 5, marginLeft: 20 }}>\n                          <li>\n                            <strong>Capital: </strong>\n                            <span>{c.capital}</span>\n                          </li>\n                          <li>\n                            <strong>Currency: </strong>\n                            <span>{c.currency}</span>\n                          </li>\n                        </ul>\n                      </div>\n                    </Paper>\n                  </Grid>\n                ))}\n\n          {/* ==================== */}\n\n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.continent.code === \"AS\")\n                .slice(0, 1)\n                .map((c, i) => (\n                  <div key={c.code}>\n                    <h2>\n                      <li>Asia</li>\n                    </h2>\n                  </div>\n                ))}\n\n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.continent.code.includes(\"AS\"))\n                .map((c, i) => (\n                  <Grid item xs={10} sm={5} style={{ padding: 10 }}>\n                    <Paper>\n                      <div\n                        style={{\n                          backgroundColor: \"gray\",\n                          borderRadius: 7,\n                          color: \"white\",\n                        }}\n                      >\n                        <h3 style={{ padding: 10 }}>{c.name}</h3>\n                        <ul style={{ padding: 5, marginLeft: 20 }}>\n                          <li>\n                            <strong>Capital: </strong>\n                            <span>{c.capital}</span>\n                          </li>\n                          <li>\n                            <strong>Currency: </strong>\n                            <span>{c.currency}</span>\n                          </li>\n                        </ul>\n                      </div>\n                    </Paper>\n                  </Grid>\n                ))}\n\n          {/* ==================== */}\n\n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.continent.code === \"EU\")\n                .slice(0, 1)\n                .map((c, i) => (\n                  <div key={c.code}>\n                    <h2>\n                      <li>Europe</li>\n                    </h2>\n                  </div>\n                ))}\n\n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.continent.code.includes(\"EU\"))\n                .map((c, i) => (\n                  <Grid item xs={10} sm={5} style={{ padding: 10 }}>\n                    <Paper>\n                      <div\n                        style={{\n                          backgroundColor: \"gray\",\n                          borderRadius: 7,\n                          color: \"white\",\n                        }}\n                      >\n                        <h3 style={{ padding: 10 }}>{c.name}</h3>\n                        <ul style={{ padding: 5, marginLeft: 20 }}>\n                          <li>\n                            <strong>Capital: </strong>\n                            <span>{c.capital}</span>\n                          </li>\n                          <li>\n                            <strong>Currency: </strong>\n                            <span>{c.currency}</span>\n                          </li>\n                        </ul>\n                      </div>\n                    </Paper>\n                  </Grid>\n                ))}\n\n          {/* ==================== */}\n\n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.continent.code === \"NA\")\n                .slice(0, 1)\n                .map((c, i) => (\n                  <div key={c.code}>\n                    <h2>\n                      <li>North America</li>\n                    </h2>\n                  </div>\n                ))}\n\n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.continent.code.includes(\"NA\"))\n                .map((c, i) => (\n                  <Grid item xs={10} sm={5} style={{ padding: 10 }}>\n                    <Paper>\n                      <div\n                        style={{\n                          backgroundColor: \"gray\",\n                          borderRadius: 7,\n                          color: \"white\",\n                        }}\n                      >\n                        <h3 style={{ padding: 10 }}>{c.name}</h3>\n                        <ul style={{ padding: 5, marginLeft: 20 }}>\n                          <li>\n                            <strong>Capital: </strong>\n                            <span>{c.capital}</span>\n                          </li>\n                          <li>\n                            <strong>Currency: </strong>\n                            <span>{c.currency}</span>\n                          </li>\n                        </ul>\n                      </div>\n                    </Paper>\n                  </Grid>\n                ))}\n\n          {/* ==================== */}\n\n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.continent.code === \"OC\")\n                .slice(0, 1)\n                .map((c, i) => (\n                  <div key={c.code}>\n                    <h2>\n                      <li>Oceania</li>\n                    </h2>\n                  </div>\n                ))}\n\n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.continent.code.includes(\"OC\"))\n                .map((c, i) => (\n                  <Grid item xs={10} sm={5} style={{ padding: 10 }}>\n                    <Paper>\n                      <div\n                        style={{\n                          backgroundColor: \"gray\",\n                          borderRadius: 7,\n                          color: \"white\",\n                        }}\n                      >\n                        <h3 style={{ padding: 10 }}>{c.name}</h3>\n                        <ul style={{ padding: 5, marginLeft: 20 }}>\n                          <li>\n                            <strong>Capital: </strong>\n                            <span>{c.capital}</span>\n                          </li>\n                          <li>\n                            <strong>Currency: </strong>\n                            <span>{c.currency}</span>\n                          </li>\n                        </ul>\n                      </div>\n                    </Paper>\n                  </Grid>\n                ))}\n\n          {/* ==================== */}\n\n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.continent.code === \"SA\")\n                .slice(0, 1)\n                .map((c, i) => (\n                  <div key={c.code}>\n                    <h2>\n                      <li>South America</li>\n                    </h2>\n                  </div>\n                ))}\n\n          {countries.length === 0\n            ? null\n            : filteredData\n                .filter((conti) => conti.continent.code.includes(\"SA\"))\n                .map((c, i) => (\n                  <Grid item xs={10} sm={5} style={{ padding: 10 }}>\n                    <Paper>\n                      <div\n                        style={{\n                          backgroundColor: \"gray\",\n                          borderRadius: 7,\n                          color: \"white\",\n                        }}\n                      >\n                        <h3 style={{ padding: 10 }}>{c.name}</h3>\n                        <ul style={{ padding: 5, marginLeft: 20 }}>\n                          <li>\n                            <strong>Capital: </strong>\n                            <span>{c.capital}</span>\n                          </li>\n                          <li>\n                            <strong>Currency: </strong>\n                            <span>{c.currency}</span>\n                          </li>\n                        </ul>\n                      </div>\n                    </Paper>\n                  </Grid>\n                ))}\n        </div>\n      ) : (\n        <div>\n          <h1>By language</h1>\n          {/* lógica para búsqueda por \"language\" */}\n        </div>\n      )}\n      <Footer></Footer>\n    </>\n  );\n};\n\nReactDOM.render(<CountryList />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}