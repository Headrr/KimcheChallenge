{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Head\\\\Desktop\\\\React JS\\\\dev-challenge-template-master\\\\kimchechallenge\\\\src\\\\index.js\";\nimport React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloClient, InMemoryCache, gql, useQuery } from \"@apollo/client\";\nimport Flags from \"country-flag-icons/react/3x2\";\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport { Label, Row, Col, Input } from \"reactstrap\";\nimport SearchIcon from \"@material-ui/icons/Search\"; // initialize a GraphQL client\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  uri: \"https://countries.trevorblades.com\"\n}); // write a GraphQL query that asks for names and codes for all countries\n\nconst LIST_COUNTRIES = gql`\n  {\n    countries {\n      name\n      code\n      native\n      capital\n      emoji\n      currency\n      languages {\n        code\n        name\n      }\n    }\n  }\n`; // create a component that renders a select input for coutries\n\nconst CountrySelect = () => {\n  const [locale, setLocale] = useState(\"\");\n  const [local, setLocal] = useState(locale);\n\n  const obtener = () => {\n    setLocale(window.localStorage.getItem(\"PAIS\"));\n  }; // const setValue = (value) => {\n  //   try {\n  //     window.localStorage.setItem(\"PAIS\", JSON.stringify(value));\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  // };\n\n\n  useEffect(() => {\n    obtener();\n\n    const item = () => {\n      setLocal(window.localStorage.getItem(\"PAIS\"));\n    }; // setLocal(window.localStorage.getItem(\"PAIS\"))\n\n\n    item();\n  }, [local, locale]);\n  const [country, setCountry] = useState(\"\");\n  useEffect(() => {\n    obtener();\n\n    const item = () => {\n      setCountry(window.localStorage.getItem(\"PAIS\"));\n    }; // setLocal(window.localStorage.getItem(\"PAIS\"))\n\n\n    item();\n  }, [country]);\n  const [monea, setMonea] = useState(\"\"); // const [pais, setPais] = useState('');\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(LIST_COUNTRIES, {\n    client\n  });\n\n  if (loading || error) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 12\n      }\n    }, error ? error.message : \"Loading...\");\n  } // const flagNationCode = ''\n  // const Bandera = (flagNationCode) => {\n  //   return <Flags.`${}` />;\n  // };\n\n\n  const defMonea = item => {\n    return `\"${item}\"`;\n  };\n\n  const pais = countrys => {\n    return (// <img src={`http://purecatamphetamine.github.io/country-flag-icons/3x2/${countrys}}CL.svg`} alt=\"GG\"/>\n      `http://purecatamphetamine.github.io/country-flag-icons/3x2/${countrys}}.svg`\n    );\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    style: {\n      marginTop: 20,\n      marginBottom: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"Some random text \", \"\\n\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"input-group input-group-sm mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    class: \"input-group-text\",\n    id: \"inputGroup-sizing-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    style: {\n      fontSize: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 60\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    class: \"form-control\",\n    \"aria-label\": \"Sizing example input\",\n    \"aria-describedby\": \"inputGroup-sizing-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 3\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    value: country,\n    onChange: event => {\n      setCountry(event.target.value); // setValue(event.target.value)\n\n      window.localStorage.setItem(\"PAIS\", JSON.stringify(event.target.value));\n      setLocal(event.target.value);\n      console.log(country);\n    },\n    onClick: () => defMonea(monea),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, country && data.countries.map(country => /*#__PURE__*/React.createElement(\"option\", {\n    key: country.code,\n    value: country.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, country.name, \" ||\", \"Currency: \", country.currency))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, data.countries.filter(country => country.name === {\n    local\n  }).map(countre => /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"Currencye: \", countre.currency))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, country), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    // alt=\"United States\"\n    // src={pais}\n    source: pais(local),\n    alt: \"gg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, \"el kodigo de tu pa\\xED e: \", country, \" \\uD83D\\uDE38\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, \"tu monea e: \", local), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }, \"LOCAL: \", local), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(CountrySelect, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["C:/Users/Head/Desktop/React JS/dev-challenge-template-master/kimchechallenge/src/index.js"],"names":["React","useEffect","useState","ReactDOM","ApolloClient","InMemoryCache","gql","useQuery","Flags","Header","Footer","Label","Row","Col","Input","SearchIcon","client","cache","uri","LIST_COUNTRIES","CountrySelect","locale","setLocale","local","setLocal","obtener","window","localStorage","getItem","item","country","setCountry","monea","setMonea","data","loading","error","message","defMonea","pais","countrys","marginTop","marginBottom","fontSize","event","target","value","setItem","JSON","stringify","console","log","countries","map","code","name","currency","filter","countre","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloClient, InMemoryCache, gql, useQuery } from \"@apollo/client\";\nimport Flags from \"country-flag-icons/react/3x2\";\nimport Header from \"./components/header\";\nimport Footer from \"./components/footer\";\nimport { Label, Row, Col, Input } from \"reactstrap\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n// initialize a GraphQL client\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  uri: \"https://countries.trevorblades.com\",\n});\n\n// write a GraphQL query that asks for names and codes for all countries\nconst LIST_COUNTRIES = gql`\n  {\n    countries {\n      name\n      code\n      native\n      capital\n      emoji\n      currency\n      languages {\n        code\n        name\n      }\n    }\n  }\n`;\n\n// create a component that renders a select input for coutries\nconst CountrySelect = () => {\n  const [locale, setLocale] = useState(\"\");\n  const [local, setLocal] = useState(locale);\n\n  const obtener = () => {\n    setLocale(window.localStorage.getItem(\"PAIS\"));\n  };\n\n  // const setValue = (value) => {\n  //   try {\n  //     window.localStorage.setItem(\"PAIS\", JSON.stringify(value));\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  // };\n\n  useEffect(() => {\n    obtener();\n    const item = () => {\n      setLocal(window.localStorage.getItem(\"PAIS\"));\n    };\n\n    // setLocal(window.localStorage.getItem(\"PAIS\"))\n    item();\n  }, [local, locale]);\n\n  const [country, setCountry] = useState(\"\");\n\n  useEffect(() => {\n    obtener();\n    const item = () => {\n      setCountry(window.localStorage.getItem(\"PAIS\"));\n    };\n\n    // setLocal(window.localStorage.getItem(\"PAIS\"))\n    item();\n  }, [country]);\n\n  const [monea, setMonea] = useState(\"\");\n  // const [pais, setPais] = useState('');\n  const { data, loading, error } = useQuery(LIST_COUNTRIES, { client });\n\n  if (loading || error) {\n    return <p>{error ? error.message : \"Loading...\"}</p>;\n  }\n  // const flagNationCode = ''\n  // const Bandera = (flagNationCode) => {\n  //   return <Flags.`${}` />;\n  // };\n\n  const defMonea = (item) => {\n    return `\"${item}\"`;\n  };\n  const pais = (countrys) => {\n    return (\n      // <img src={`http://purecatamphetamine.github.io/country-flag-icons/3x2/${countrys}}CL.svg`} alt=\"GG\"/>\n      `http://purecatamphetamine.github.io/country-flag-icons/3x2/${countrys}}.svg`\n    );\n  };\n  return (\n    <>\n      <Header></Header>\n      {/* <h3>Versión fruna {\n        locale.length === 0 ? <h1>No carga</h1> : <h1>Cargo! {locale}</h1>}\n        </h3> */}\n      <Row style={{ marginTop: 20, marginBottom: 20 }}>\n        <Col>\n          <Label>Some random text {\"\\n\"}</Label>\n          <div class=\"input-group input-group-sm mb-3\">\n  <span class=\"input-group-text\" id=\"inputGroup-sizing-sm\"><SearchIcon style={{fontSize: 20}} /></span>\n  <input type=\"text\" class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-sm\"/>\n</div>\n          {/* <div class=\"input-group mb-3\">\n          \n          <input type=\"text\" class=\"form-control\" \n          placeholder=\"Recipient's username\" aria-label=\"Recipient's username\" \n          aria-describedby=\"button-addon2\"\n          style={{borderRadius: 5}}/>\n          {\"  \"}\n          <button class=\"btn btn-outline-secondary\" type=\"button\" id=\"button-addon2\" style={{borderRadius: 5}}>Button</button>\n        </div> */}\n        </Col>\n      </Row>\n      <Row>\n        {/* <Input style={{width: '100%'}}>\n        </Input> */}\n      </Row>\n\n      <select\n        value={country}\n        onChange={(event) => {\n          setCountry(event.target.value);\n          // setValue(event.target.value)\n          window.localStorage.setItem(\n            \"PAIS\",\n            JSON.stringify(event.target.value)\n          );\n          setLocal(event.target.value);\n          console.log(country);\n        }}\n        onClick={() => defMonea(monea)}\n      >\n        {country &&\n          data.countries.map((country) => (\n            <option key={country.code} value={country.code}>\n              {country.name} ||\n              {/* <span>{\" \"}</span> */}\n              Currency: {country.currency}\n            </option>\n          ))}\n      </select>\n\n      <div>\n        {data.countries\n          .filter((country) => country.name === { local })\n          .map((countre) => (\n            <h1>\n              {/* <span>{\" \"}</span> */}\n              Currencye: {countre.currency}\n            </h1>\n          ))}\n      </div>\n      <div className=\"label\">{country}</div>\n      <div className=\"value\">\n        {/* {Bandera(country)} */}\n        <img\n          // alt=\"United States\"\n          // src={pais}\n          source={pais(local)}\n          alt=\"gg\"\n        />\n        {/* {pais(country)} */}\n      </div>\n      <h1>el kodigo de tu paí e: {country} 😸</h1>\n      <h2>tu monea e: {local}</h2>\n      <h4>LOCAL: {local}</h4>\n\n      <Footer></Footer>\n    </>\n  );\n};\n\nReactDOM.render(<CountrySelect />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}