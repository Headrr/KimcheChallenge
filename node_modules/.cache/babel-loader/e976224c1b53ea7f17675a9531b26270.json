{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Head\\\\Desktop\\\\React JS\\\\dev-challenge-template-master\\\\kimchechallenge\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { ApolloClient, InMemoryCache, gql, useQuery } from '@apollo/client';\nimport Flags from \"country-flag-icons/react/3x2\"; // initialize a GraphQL client\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  uri: 'https://countries.trevorblades.com'\n}); // write a GraphQL query that asks for names and codes for all countries\n\nconst LIST_COUNTRIES = gql`\n  {\n    countries {\n      name\n      code\n      native\n      capital\n      emoji\n      currency\n      languages {\n        code\n        name\n      }\n    }\n  }\n`; // create a component that renders a select input for coutries\n\nfunction CountrySelect() {\n  const [country, setCountry] = useState('US'); // const [pais, setPais] = useState('');\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(LIST_COUNTRIES, {\n    client\n  });\n\n  if (loading || error) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }\n    }, error ? error.message : 'Loading...');\n  } // const flagNationCode = ''\n  // const Bandera = (flagNationCode) => {\n  //   return <Flags.`${}` />;\n  // };\n\n\n  const pais = pai => `http://purecatamphetamine.github.io/country-flag-icons/3x2/${pais}CL.svg`;\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: country,\n    onChange: event => setCountry(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, data.countries.map(country => /*#__PURE__*/React.createElement(\"option\", {\n    key: country.code,\n    value: country.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, country.name))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, country.code), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"United States\",\n    src: pais(country),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, country));\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(CountrySelect, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Head/Desktop/React JS/dev-challenge-template-master/kimchechallenge/src/index.js"],"names":["React","useState","ReactDOM","ApolloClient","InMemoryCache","gql","useQuery","Flags","client","cache","uri","LIST_COUNTRIES","CountrySelect","country","setCountry","data","loading","error","message","pais","pai","event","target","value","countries","map","code","name","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,YAAR,EAAsBC,aAAtB,EAAqCC,GAArC,EAA0CC,QAA1C,QAAyD,gBAAzD;AACA,OAAOC,KAAP,MAAkB,8BAAlB,C,CAEA;;AACA,MAAMC,MAAM,GAAG,IAAIL,YAAJ,CAAiB;AAC9BM,EAAAA,KAAK,EAAE,IAAIL,aAAJ,EADuB;AAE9BM,EAAAA,GAAG,EAAE;AAFyB,CAAjB,CAAf,C,CAKA;;AACA,MAAMC,cAAc,GAAGN,GAAI;;;;;;;;;;;;;;;CAA3B,C,CAiBA;;AACA,SAASO,aAAT,GAAyB;AACvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,IAAD,CAAtC,CADuB,CAEvB;;AACA,QAAM;AAACc,IAAAA,IAAD;AAAOC,IAAAA,OAAP;AAAgBC,IAAAA;AAAhB,MAAyBX,QAAQ,CAACK,cAAD,EAAiB;AAACH,IAAAA;AAAD,GAAjB,CAAvC;;AAEA,MAAIQ,OAAO,IAAIC,KAAf,EAAsB;AACpB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIA,KAAK,GAAGA,KAAK,CAACC,OAAT,GAAmB,YAA5B,CAAP;AACD,GAPsB,CAQvB;AACA;AACA;AACA;;;AACF,QAAMC,IAAI,GAAIC,GAAD,IAAW,8DAA6DD,IAAK,QAA1F;;AACE,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAQ,IAAA,KAAK,EAAEN,OAAf;AAAwB,IAAA,QAAQ,EAAEQ,KAAK,IAAIP,UAAU,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,IAAI,CAACS,SAAL,CAAeC,GAAf,CAAmBZ,OAAO,iBACzB;AAAQ,IAAA,GAAG,EAAEA,OAAO,CAACa,IAArB;AAA2B,IAAA,KAAK,EAAEb,OAAO,CAACa,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,OAAO,CAACc,IADX,CADD,CADH,CADA,eAQA;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBd,OAAO,CAACa,IAAhC,CARA,eASM;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AACE,IAAA,GAAG,EAAC,eADN;AAEE,IAAA,GAAG,EAAEP,IAAI,CAACN,OAAD,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CATN,eAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,OAAL,CAhBA,CADF;AAqBD;;AAEDX,QAAQ,CAAC0B,MAAT,eAAgB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAmCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAnC","sourcesContent":["import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport {ApolloClient, InMemoryCache, gql, useQuery} from '@apollo/client';\nimport Flags from \"country-flag-icons/react/3x2\";\n\n// initialize a GraphQL client\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  uri: 'https://countries.trevorblades.com'\n});\n\n// write a GraphQL query that asks for names and codes for all countries\nconst LIST_COUNTRIES = gql`\n  {\n    countries {\n      name\n      code\n      native\n      capital\n      emoji\n      currency\n      languages {\n        code\n        name\n      }\n    }\n  }\n`;\n\n// create a component that renders a select input for coutries\nfunction CountrySelect() {\n  const [country, setCountry] = useState('US');\n  // const [pais, setPais] = useState('');\n  const {data, loading, error} = useQuery(LIST_COUNTRIES, {client});\n\n  if (loading || error) {\n    return <p>{error ? error.message : 'Loading...'}</p>;\n  }\n  // const flagNationCode = ''\n  // const Bandera = (flagNationCode) => {\n  //   return <Flags.`${}` />;\n  // };\nconst pais = (pai) => (`http://purecatamphetamine.github.io/country-flag-icons/3x2/${pais}CL.svg`);\n  return (\n    <div>\n    <select value={country} onChange={event => setCountry(event.target.value)}>\n      {data.countries.map(country => (\n        <option key={country.code} value={country.code}>\n          {country.name}\n        </option>\n      ))}\n    </select>\n    <div className=\"label\">{country.code}</div>\n          <div className=\"value\">\n            {/* {Bandera(country)} */}\n            <img\n              alt=\"United States\"\n              src={pais(country)}\n              />\n          </div>\n    <h1>{country}</h1>\n\n    </div>\n  )\n}\n\nReactDOM.render(<CountrySelect />, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}